#include <cstdio>
#include <vector>
#include <cmath>
using namespace std;
const int maxn=100010;
struct Node
{
    vector<int> child;
}node[maxn];
int n,maxDepth=0,num=0;
void DFS(int index,int depth)
{
    if(node[index].child.size()==0)
    {
        if(depth>maxDepth)
        {
            maxDepth=depth;
            num=1;
        }
        else if(depth==maxDepth)
            num++;
        return;
    }
    for(int i=0;i<node[index].child.size();i++)
    {
        DFS(node[index].child[i],depth+1);
    }
}
int main()
{
    double p,r;
    int n,id,root;
    scanf("%d%lf%lf",&n,&p,&r);
    r/=100;
    for(int i=0;i<n;i++)
    {
        scanf("%d",&id);
        if(id==-1) root=i;
        else
        {
            node[id].child.push_back(i);
        }
    }
    DFS(root,0);
    printf("%.2f %d\n",p*pow(1+r,maxDepth),num);
    return 0;
}
