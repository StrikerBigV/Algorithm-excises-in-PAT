#include <cstdio>
#include <vector>
#include <queue>
#include <cstring>
using namespace std;
const int maxv=1010;
struct Node
{
    int id,level;
};
vector<Node> Adj[maxv];
bool isQ[maxv]={false};
int BFS(int s,int l)
{
    int numFoward=0;
    Node start;
    start.id=s;
    start.level=0;
    queue<Node> Q;
    Q.push(start);
    isQ[start.id]=true;
    while(!Q.empty())
    {
        Node top=Q.front();
        Q.pop();
        int u=top.id;
        for(int i=0;i<Adj[u].size();i++)
        {
            Node next;
            next=Adj[u][i];
            next.level=top.level+1;
            if(isQ[next.id]==false&&next.level<=l)
            {
                Q.push(next);
                isQ[next.id]=true;
                numFoward++;
            }
        }
    }
    return numFoward;
}
int main()
{
    Node user;
    int n,l,numFollow,idFollow;
    scanf("%d%d",&n,&l);
    for(int i=1;i<=n;i++)
    {
        user.id=i;
        scanf("%d",&numFollow);
        for(int j=0;j<numFollow;j++)
        {
            scanf("%d",&idFollow);
            Adj[idFollow].push_back(user);
        }
    }
    int k,ID;
    scanf("%d",&k);
    for(int i=0;i<k;i++)
    {
        memset(isQ,false,sizeof(isQ));
        scanf("%d",&ID);
        int res=BFS(ID,l);
        printf("%d\n",res);
    }
    return 0;
}
