#include <cstdio>
#include <algorithm>
using namespace std;
const int maxn=111;
int orgin[maxn],tempOrgin[maxn],result[maxn];
int n;
void showArray(int A[])
{
    for(int i=1;i<=n;i++){
        printf("%d",A[i]);
        if(i<n) printf(" ");
    }
    printf("\n");
}
bool isSame(int A[],int B[])
{
    for(int i=1;i<=n;i++){
        if(A[i]!=B[i]){
            return false;
        }
    }
    return true;
}
bool insertSort()
{
    bool flag=false;
    for(int i=2;i<=n;i++){
        if(i!=2&&isSame(tempOrgin,result)){
            flag=true;
        }
    sort(tempOrgin,tempOrgin+i+1);
    if(flag==true){
        return true;
    }
    }
    return false;
}
void shiftDown(int low,int high)
{
    int i=low,j=2*i;
    while(j<=high){
        if(j+1<=high&&tempOrgin[j+1]>tempOrgin[j]){
            j=j+1;
        }
        if(tempOrgin[i]<tempOrgin[j]){
            swap(tempOrgin[i],tempOrgin[j]);
            i=j;
            j=2*i;
        }
        else break;
    }
}
void createHeap()
{
    for(int i=n/2;i>=1;i--){
        shiftDown(i,n);
    }
}
void heapSort()
{
    bool flag=false;
    createHeap();
    for(int i=n;i>1;i--){
        if(i!=n&&isSame(tempOrgin,result)){
            flag=true;
        }
        swap(tempOrgin[i],tempOrgin[1]);
        shiftDown(1,i-1);
        if(flag==true){
            showArray(tempOrgin);
            return;
        }
    }
}
int main()
{
    scanf("%d",&n);
    for(int i=1;i<=n;i++){
        scanf("%d",&orgin[i]);
        tempOrgin[i]=orgin[i];
    }
    for(int i=1;i<=n;i++){
        scanf("%d",&result[i]);
    }
    if(insertSort()){
        printf("Insertion Sort\n");
        showArray(tempOrgin);
    }
    else{
        printf("Heap Sort\n");
        for(int i=1;i<=n;i++){
            tempOrgin[i]=orgin[i];
        }
        heapSort();
    }
    return 0;
}
