#include <cstdio>
#include <queue>
using namespace std;
const int maxn=50;
struct treeNode
{
    int data;
    treeNode* lchild;
    treeNode* rchild;
};
int Post[maxn];
int In[maxn];
treeNode* creat(int inL,int inR,int postL,int postR)
{
    if(postL>postR) return NULL;
    treeNode* root=new treeNode;
    root->data=Post[postR];
    int k;
    for(k=inL;k<=inR;k++)
    {
        if(In[k]==Post[postR])
            break;
    }
    int numLeft=k-inL;
    root->lchild=creat(inL,k-1,postL,postL+numLeft-1);
    root->rchild=creat(k+1,inR,postL+numLeft,postR-1);
    return root;
}
int n,num=0;
void levelOrder(treeNode* root)
{
    queue<treeNode*> Q;
    Q.push(root);
    while(!Q.empty())
    {
        treeNode* top=Q.front();
        Q.pop();
        printf("%d",top->data);
        num++;
        if(num<n) printf(" ");
        if(top->lchild!=NULL) Q.push(top->lchild);
        if(top->rchild!=NULL) Q.push(top->rchild);
    }
}
int main()
{
    scanf("%d",&n);
    for(int i=0;i<n;i++)
    {
        scanf("%d",&Post[i]);
    }
    for(int i=0;i<n;i++)
    {
        scanf("%d",&In[i]);
    }
    treeNode* root=creat(0,n-1,0,n-1);
    levelOrder(root);
    return 0;
}
